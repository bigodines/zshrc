## My magical git function ##
# Adds various checks to `git` as detailed below:
#  * Makes sure you've run your specs/features before pushing
#  * Asks for confirmation before committing on master
#  * Changes `git rebase .` into `git rebase origin/$current_branch`
# function git {
  GIT=$(whence -p git)
  CONTINUE=true

  # git push
  # Checks if there are spec/ or features/ folders and
  # questions the user if they have been run if they exist.
  if [[ "$1" == "push" ]]; then

    # Check if spec/ exists
    if [[ -e spec ]]; then
      CONTINUE=false # fail by default
      # Ask the user
      echo -n "Have you run your specs? [Y/n]"
      read a
      if [[ $a == "Y" || $a == "y" || $a == "" ]]; then
        CONTINUE=true
      fi
    fi

    # Check if features/ exists
    if [[ -e features ]]; then
      CONTINUE=false # fail by default
      # Ask the user
      echo -n "Have you run your features? [Y/n]"
      read a
      if [[ $a == "Y" || $a == "y" || $a == "" ]]; then
        CONTINUE=true
      fi
    fi
  fi

  # git checkout
  # If you pass "-" as the branch name then it attempts to check out the previous
  # branch you were on, deducing that from the `git reflog`
  if [[ "$1" == "checkout" || "$1" == "co" ]]; then
    # Check if it's 'checkout -' or an actual branch name
    if [[ "$2" == "-" ]]; then
      # Don't run 'checkout -'
      CONTINUE=false

      # Figure it out from the reflog
      LAST_BRANCH=$(git log -g --oneline | egrep "moving from .*? to ($(current_branch)|HEAD)" | head -n1 | awk '{ print $6 }')
      if [[ "$LAST_BRANCH" != "" ]]; then
        $GIT checkout $LAST_BRANCH
      else
        echo "I'm sorry $USER, I'm afraid I can't do that."
      fi
    fi
  fi

  # git rebase
  if [[ "$1" == "rebase" ]]; then
    # Double check if we're trying to rebase "."
    if [[ "$2" == "." ]]; then
      # Don't run "git rebase ."
      CONTINUE=false

      # Run our actual git rebase
      $GIT rebase origin/$(current_branch)
    fi
  fi

  # Run the command if we've been told to.
  # The default is to run the command so this 
  # fires unless a check has disabled it.
  if [[ $CONTINUE == true ]]; then
    $GIT $*
  fi
# }
